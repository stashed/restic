name: Release

on:
  push:
    tags:
      - "*.*"

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    env:
      BUILDER_IMAGE: appscodeci/golang-dev:1.16
      GO_VERSION: 1.16
    steps:
      - uses: actions/checkout@v1

      - name: Export Environment Variables
        run: |
          echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "OUTPUT_DIR=$(pwd)/output" >> $GITHUB_ENV

      - name: Build Binaries
        run: |
          #  create bin and cache directory
          mkdir -p ${OUTPUT_DIR}/bin ${OUTPUT_DIR}/cache

          # build binaries
          docker run --rm \
              --volume "$PWD:/src" \
              -u $(id -u):$(id -g) \
              -w /src \
              -v ${OUTPUT_DIR}/bin/:/go/bin   \
              -v ${OUTPUT_DIR}/cache:/.cache  \
              ${BUILDER_IMAGE} \
              go run /src/helpers/build-release-binaries/main.go --version ${TAG} --source="/src" --output="/go/bin/"

      - name: List Files
        run: |
          ls -lah ${OUTPUT_DIR}/bin/*

      - name: Build restic with alpine image
        run: |
          docker run --rm \
          -v "$(pwd)":/go/src/github.com/restic/restic \
          -w /go/src/github.com/restic/restic \
          golang:${GO_VERSION}-alpine \
          go run build.go

      - name: Publish image into GitHub Container Registry
        env:
          REGISTRY: ghcr.io/stashed
          USERNAME: 1gtm
          DOCKER_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          # login into the registry
          docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
          # build the docker image
          docker build --rm -t ${REGISTRY}/restic:${TAG} -f $(pwd)/docker/Dockerfile .
          # push image into the registry
          docker push ${REGISTRY}/restic:${TAG}
          # push image with "latest" tag
          docker tag ${REGISTRY}/restic:${TAG} ${REGISTRY}/restic:latest
          docker push ${REGISTRY}/restic:latest

      - name: Publish image into DockerHub
        env:
          REGISTRY: stashed
          USERNAME: 1gtm
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # login into the registry
          docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
          # build the docker image
          docker build --rm -t ${REGISTRY}/restic:${TAG} -f $(pwd)/docker/Dockerfile .
          # push image into the registry
          docker push ${REGISTRY}/restic:${TAG}
          # push image with "latest" tag
          docker tag ${REGISTRY}/restic:${TAG} ${REGISTRY}/restic:latest
          docker push ${REGISTRY}/restic:latest

      - name: Build Changelog
        id: changelog-builder
        uses: mikepenz/release-changelog-builder-action@v2.1.0
        with:
          configuration: .github/changelog-config.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fail_on_unmatched_files: true
          body:  ${{steps.changelog-builder.outputs.changelog}}
          files: ${{env.OUTPUT_DIR}}/bin/*
